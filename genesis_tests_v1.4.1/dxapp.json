{
  "name": "genesis_tests_v1.4.1",
  "title": "genesis_tests_v1.4.1",
  "summary": "Runs single variant and aggregate test for genetic data. Implements Single-variant, Burden, SKAT, SKAT-O and SMMAT tests for Continuous or Dichotomous outcomes. All tests account for familiar relatedness through kinship matrixes.\n\n\nUnderlying functions adapted from:\nConomos MP and Thornton T (2016). GENESIS: GENetic EStimation and Inference in Structured samples (GENESIS): Statistical methods for analyzing genetic data from samples with population structure and/or relatedness. R package version 2.3.4. \n\thttp://bioconductor.org/packages/devel/bioc/html/GENESIS.html\n\thttps://github.com/smgogarten/GENESIS",
  "tags": [
    "Statistics"
  ],
  "dxapi": "1.0.0",
  "inputSpec": [
    {
      "name": "genotypefile",
      "class": "file",
      "patterns": ["*.gds", "*.GDS"],
      "optional": false
    },
    {
      "name": "null_model",
      "class": "file",
      "patterns": ["*.Rda", "*.Rdata"],
      "optional": false
    },
    {
      "name": "outputfilename",
      "label": "prefix for output file name, no spaces",
      "class": "string",
      "optional": false
    },
    {
      "name": "test_type",
      "help": "Valid tests are one of the collapsing tests Burden, SKAT, fastSKAT, SMMAT,  SKATO or Single",
      "class": "string",
      "optional": false
    },
    {
      "name": "test_stat",
      "help": "Valid tests statistic types are: Score and Score.SPA",
      "class": "string",
      "optional": true,
      "default": "Score"
    },
    {
      "name": "pass_only",
      "help": "Filter variants to those with a PASS flag: TRUE or FALSE",
      "class": "string",
      "optional": true,
      "default": "TRUE"
    },
    {
      "name": "return_variants",
      "help": "Returns single snp results for each aggregate test",
      "class": "string",
      "optional": true,
      "default": "FALSE"
    },
    {
      "name": "varaggfile",
      "help": "File contains lists of variants that should be aggregated into groups.  Can also be used to filter variants in sliding window or single variant tests, or to pass a variant weight column. File should be a CSV file with the headers: group_id, chromosome, position, ref and alt.  All variants for with the same group_id will be combined into a single aggregate tests.  ",
      "class": "file",
      "patterns": ["*.csv", "*.rda", "*.rdata", "*.Rda", "*.Rdata"],
      "optional": true
    },
    {
      "name": "window",
      "help": "Runs a sliding window test based on this window size in bp. Setting this parameter > 0 will select a sliding window test, overriding the aggregation file method.",
      "class": "int",
      "optional": true,
      "default": 0
    },
    {
      "name": "step",
      "help": "Window step (slide) size for sliding window analysis ( in bp ).  For non-overlapping windows set step=window",
      "class": "int",
      "optional": true,
      "default": 0
    },
    {
      "name": "min_mac",
      "help": "Minimum minor allele count for threshold",
      "class": "int",
      "optional": true,
      "default": 5
    },
    {
      "name": "top_maf",
      "help": "Maximim minor allele frequency ( generally used for aggregate tests )",
      "class": "float",
      "optional": true,
      "default": 1
    },
    {
      "name": "weights_col",
      "help": "Name of column in aggfile that contains the variant weights",
      "class": "string",
      "default": "FALSE"
    },
    {
      "name": "weights",
      "help": "beta weights set to flat weights (e.g. set to 'c(1,25)' for Wu weights or 'c(0.5,0.5)' for Madsen-Browning weights)",
      "class": "string",
      "optional": true,
      "default": "FALSE"
    },
    {
      "name": "ntrace",
      "help": "The number of vectors to sample when using random projections to estimate the trace needed for p-value calculation with fastSKAT",
      "class": "int",
      "optional": true,
      "default": 500
    },
    {
      "name": "neig",
      "help": "The number eigenvalues to approximate by using random projections for calculating p-values with fastSKAT; ",
      "class": "int",
      "optional": true,
      "default": 200
    },
    {
      "name": "imputed",
      "help": "Input data is imputed: TRUE or FALSE",
      "class": "string",
      "optional": true,
      "default": "FALSE"
    },
    {
      "name": "genome_build",
      "help": "hg38 or hg19",
      "class": "string",
      "optional": true,
      "default": "hg38"
    },
    {
      "name": "interaction",
      "help": "character string specifying the name of the variables for which a genotype interaction term should be included.  Single variant only",
      "class": "string",
      "optional": true,
      "default": "NULL"
    },
    {
      "name": "user_cores",
      "class": "int",
      "optional": false,
      "default": 30
    },
    {
      "name": "debug",
      "class": "int",
      "optional": true,
      "default": 0
    }
  ],
  "outputSpec": [
    {
      "name": "results",
      "class": "file"
    },
    {
      "name": "varresults",
      "class": "file",
      "optional": true
    }
  ],
  "runSpec": {
    "systemRequirementsByRegion": {
      "aws:us-east-1": {
        "main": {
          "instanceType": "mem3_ssd1_v2_x32"
        }
      }
    },
    "systemRequirements": {
      "main": {
        "instanceType": "mem3_ssd1_v2_x32"
      }
    },
    "file": "src/code.sh",
    "release": "16.04",
    "interpreter": "bash",
    "distribution": "Ubuntu"
  },
  "access": {
    "project": "CONTRIBUTE",
    "allProjects": "CONTRIBUTE",
    "network": [
      "*"
    ]
  }
}
